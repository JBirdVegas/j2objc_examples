# We have to configure the language in the matrix below.
language: generic

matrix:
  include:
    - os: osx
      osx_image: xcode7
      language: objective-c
      env:
        - USING_OS=osx
        - USING_XCODE=7
    - os: linux
      language: android
      jdk: oraclejdk7
      env: USING_OS=linux
        - ANDROID_TARGET=android-23  ANDROID_ABI=armeabi-v7a
        - ADB_INSTALL_TIMEOUT=8
      android:
        components:
           - tools
           - android-23
           - build-tools-23.0.1
           - extra-google-m2repository
           - extra-android-m2repository
           - sys-img-armeabi-v7a-android-23
      before_script:
        - echo $USING_OS
        - pushd . && cd simple
        - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
        - emulator -avd test -no-skin -no-audio -no-window &
        - android-wait-for-emulator
        - adb shell input keyevent 82 &
# We can be run in a container for improved performance.
sudo: false

before_install:
  # Don't spew graphic art.
  - export TERM=dumb
  - env
  # Travis doesn't let us select the JDK version on OS X.  Force it ourselves.
  - if [ "$USING_OS" = "osx" ]; then ./install-osx-jdk7.sh; fi

# If these steps fail, the build is 'errored' - i.e. misconfigured.
# This can fail if we cannot download Gradle 2.4 or the libraries
# we depend on.
install:
  - ./install.sh

before_script:
  - pushd . && cd simple
# If these steps fail, the build is 'failed' - i.e. we have a code defect.
# We compile (assemble) and then build (which also tests) to capture build
# and test failures separately.
script:
#  - ./gradlew assemble
  - ./gradlew dependencies
  - ./gradlew build
  - if [ "$USING_OS" = "linux" ]; then ./gradlew connectedAndroidTest; fi
  # Run our system tests
#  - if [ "$USING_OS" = "osx" ]; then ./gradlew :shared:build; fi
  
after_script:
  - popd